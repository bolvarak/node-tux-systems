///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'use strict'; /// Strict Syntax //////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import { CommonConfiguration as Config } from './Configuration'; /// Configuration Settings //////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import { CommonUtility as Utility } from './Utility'; /// Utility Module /////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import * as Bluebird from 'bluebird'; /// Bluebird Promises Module ///////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import { DataType, Model, Sequelize } from 'sequelize-typescript'; /// Sequelize Module //////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

import { QueryOptions } from 'sequelize';

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import * as path from 'path'; /// Path Module ////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import * as glob from 'glob'; /// GLOB Module ////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class CommonDatabaseClass { /// CommonDatabase Class Definition //////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Constants ////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * This constant is a convenience contant providing access the Sequelize's Op class
	 * @name CommonDatabaseClass.Operator
	 * @public
	 * @static
	 * @type {Sequelize.Op}
	 */
	public static Operator = Sequelize.Op;

	/**
	 * This constant is a convenience contant providing access the Sequelize's QueryTypes class
	 * @name CommonDatabaseClass.Query
	 * @public
	 * @static
	 * @type {QueryTypes}
	 */
	public static Query = Sequelize.QueryTypes;

	/**
	 * This constant is a convenience contant providing access the Sequelize's QueryTypes class
	 * @name CommonDatabaseClass.Query
	 * @public
	 * @static
	 * @type {DatType}
	 */
	public static Type = DataType;

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Properties ///////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * This property contains the database connection
	 * @name CommonDatabaseClass.mConnection
	 * @protected
	 * @type {Sequelize}
	 */
	protected mConnection: Sequelize;

	/**
	 * This property contains our ORM models
	 * @name CommonDatabaseClass.mModels
	 * @protected
	 * @type {{[name: string]: Model<any, any>}}
	 */
	protected mModels: {[name: string]: Model<any>} = {};

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Constructor //////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * This method instantiates a new CommonDatabase class object
	 * @name CommonDatabaseClass.constructor()
	 * @returns {CommonDatabaseClass}
	 */
	constructor() {

		///////////////////////////////////////////////////////////////////////////////////////////////////////////////
		/// Connection Initialization ////////////////////////////////////////////////////////////////////////////////
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////

		// Connect to the database
		this.mConnection = new Sequelize(Config.db);

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	} /// End Constructor ////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Public Methods ///////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	async executeSqlFile($file: string, $options: QueryOptions): Promise<Bluebird<any>> {
		// Check the file path
		if ($file.substr(0, 1) !== path.sep) {
			// Reset the file name
			$file = path.join(__dirname, '..', 'Data', 'Query', $file);
		}
		// Check for a file extension
		if ($file.substr(-4).toLowerCase() !== '.sql') {
			// Append the extension
			$file += '.sql';
		}
		// Read the SQL file
		let $sql = await Utility.fsReadFile($file, 'utf8');
		// Execute the query
		return await this.mConnection.query($sql.toString(), $options);
	}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} /// End CommonDatabase Class Definition ////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const CommonDatabase = new CommonDatabaseClass(); /// CommonDatabase Module Instantiation ////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
export { CommonDatabase }; /// CommonDatabase Module Export //////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
