///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'use strict'; /// Strict Syntax //////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const $fileSystem = require('fs'); /// File-System Module ////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const $lodash = require('lodash'); /// Lodash Utility Module /////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const $util = require('util'); /// Base Utility Module ///////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const $uuidv4 = require('uuid/v4'); /// UUIDv4 Module ////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class CommonUtility { /// CommonUtility Class Definition /////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// File-System Promises /////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * This method provides a Promise wrapper for fs.unlink()
	 * @name CommonUtility.fsDeleteFile()
	 * @param {string|Buffer|URL} $path
	 * @returns {Promise}
	 * @uses fs.unlink()
	 */
	static fsDeleteFile($path) {
		// Return our new promise
		return new Promise(($resolve, $reject) => {
			// Delete the file
			$fileSystem.unlink($path, ($error) => {
				// Check for an error
				if ($error) {
					// We're done, reject the promise
					return $reject($error);
				}
				// We're done, resolve the promise
				$resolve();
			});
		});
	}

	/**
	 * This method provides a Promise wrapper for fs.readFile()
	 * @name CommonUtility.fsReadFile()
	 * @param {string|Buffer|URL|integer} $path
	 * @param {Object.<string, string> | string, optional} $options [undefined]
	 * @returns {Promise}
	 * @static
	 * @uses fs.readFile()
	 */
	static fsReadFile($path, $options = undefined) {
		// Return our new promise
		return new Promise(($resolve, $reject) => {
			// Read the file
			$fileSystem.readFile($path, $options, ($error, $data) => {
				// Check for an error
				if ($error) {
					// We're done, reject the promise
					return $reject($error);
				}
				// We're done, resolve the promise
				$resolve($data);
			});
		});
	}

	/**
	 * This method provides a Promise wrapper for fs.stat()
	 * @name CommonUtility.fsStat()
	 * @param {string|Buffer|URL} $path
	 * @returns {Promise}
	 * @static
	 * @uses fs.stat()
	 */
	static fsStat($path) {
		// Return our new promise
		return new Promise(($resolve, $reject) => {
			// Stat the path
			$fileSystem.stat($path, ($error, $stats) => {
				// Check for an error
				if ($error) {
					// We're done, reject the promise
					return $reject($error);
				}
				// We're done, resolve the promise
				$resolve($stats);
			});

		});
	}

	/**
	 * This method provides a Promise wrapper for fs.writeFile()
	 * @name CommonUtility.fsWriteFile()
	 * @param {string|Buffer|URL|integer} $file
	 * @param {string|Buffer|Uint8Array} $data
	 * @param {Object<string, string>|string} $options [undefined]
	 * @returns {Promise}
	 * @static
	 * @uses fs.writeFile()
	 */
	static fsWriteFile($file, $data, $options = undefined) {
		// Return our new promise
		return new Promise(($resolve, $reject) => {
			// Write the file
			$fileSystem.writeFile($file, $data, ($error) => {
				// Check for an error
				if ($error) {
					// We're done, reject the promise
					return $reject($error);
				}
				// We're done, resolve the promise
				$resolve();
			});
		});
	}

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Utility Methods //////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * This method generates and returns a UUIDv4 string
	 * @name CommonUtility.uuid()
	 * @returns {string}
	 * @uses uuid/v4()
	 * @static
	 */
	static uuid() {
		// Return the UUID
		return $uuidv4();
	}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}; /// End CommonUtility Class Definition ////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Static Properties ////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * This property contains a reference to the Lodash utility module
 * @name CommonUtility.lodash
 * @type {lodash}
 * @static
 */
CommonUtility.lodash = $lodash;

/**
 * This property contains a reference to the utility module
 * @name CommonUtility.util
 * @type {util}
 * @static
 */
CommonUtility.util = $util;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
module.exports = CommonUtility; /// CommunUtility Module Definition //////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
