#!/usr/bin/env node

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'use strict'; /// Strict Syntax //////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
process.env.TUX_ENVIRONMENT = (process.env.TUX_ENVIRONMENT || 'devel'); /// Environment Definition ///////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
require('../Prototype/Array'); /// Array Prototypes //////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
require('../Prototype/String'); /// String Prototypes ////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const $config = require('../Common/Configuration'); /// Configuration Settings ///////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const $db = require('../Common/Database'); /// Database Connection ///////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const $dnsDaemon = require('dnsd'); /// DNS Service Module ///////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const $operatingSystem = require('os'); /// Operating-System Module //////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
(async () => { /// Main Event Loop ///////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	// Try to spawn the server
	try {
		// Define our DNS server
		let $server = $dnsDaemon.createServer(($dnsRequest, $dnsResponse) => {
			// Log the request
			console.log('%s:%s/%s %j', $dnsRequest.connection.remoteAddress, $dnsRequest.connection.remotePort, $dnsRequest.connection.type, $dnsRequest);
			// We're done, end the session
			$dnsResponse.end();
		});
		// Load the DNS zones
		let $domainList = await $db.model('dnsDomain').findAll({
			'include': ['user'],
			'where': {
				'isActive': {
					[$db.Operator.eq]: true
				}
			}
		});
		// Iterate over the domain list
		$domainList.each(($domain) => {
			// Add the zone to the server
			$server.zone($domain.name, $domain.nameServer[0], $domain.user.emailAddress, $domain.serial, $domain.refresh, $domain.retry, $domain.expire, $domain.ttl);
		});
		// Tell the server to listen on the device
		$server.listen(5053, '::1');
	} catch ($error) {
		// Log the error
		console.error($error);
		// We're done, kill the process
		process.exit(1);
	}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
})(); /// End Main Event Loop ////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
