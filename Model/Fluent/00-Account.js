///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'use strict'; /// Strict Syntax //////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
module.exports = ($sequelize, $type) => { /// Account Lookup Fluent Model Module Definition //////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	// Define our new model
	const $accountModel = $sequelize.define('account', {
		'id': {
			'allowNull': false,
			'defaultValue': $type.UUIDV4,
			'field': 'id',
			'primaryKey': true,
			'type': $type.UUID
		},
		'isActive': {
			'allowNull': true,
			'defaultValue': true,
			'field': 'is_active',
			'type': $type.BOOLEAN
		},
		'name': {
			'allowNull': false,
			'field': 'name',
			'type': $type.STRING,
			'validate': {
				'max': 150
			}
		},
		'parentAccountId': {
			'allowNull': true,
			'field': 'parent_account_id',
			'type': $type.UUID
		}
	}, {
		'indexes': [
			{'fields': ['is_active']},
			{'fields': ['name']},
			{'fields': ['parent_account_id']}
		],
		'tableName': 'account'
	});

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Association Builder //////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * This method provides the associations for this model
	 * @name Sequelize.Model.account
	 * @param {Object.<string, Sequelize.Model>} $models
	 * @returns {void}
	 */
	$accountModel.associate = ($models) => {
		// Associate the parent account ID
		$models.account.hasOne($models.account, {
			'as': 'parentAccount',
			'onDelete': 'CASCADE',
			'foreignKey': 'parentAccountId'
		});
		// Associate the sub-accounts
		$models.account.hasMany($models.account, {
			'as': 'subAccountList',
			'onDelete': 'CASCADE',
			'foreignKey': 'parentAccountId'
		});
		// Associate the users
		$models.account.hasMany($models.user, {
			'as': 'userList',
			'onDelete': 'CASCADE',
			'foreignKey': {
				'allowNull': true
			}
		});
	};

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	return $accountModel; /// Account Lookup Fluent Model Definition /////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}; /// End Account Lookup Fluent Model Module Definition /////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
