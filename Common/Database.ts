///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'use strict'; /// Strict Syntax //////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import { CommonConfiguration as Config } from './Configuration'; /// Configuration Settings //////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import * as Sequelize from 'sequelize'; /// Sequelize Module /////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import { CommonUtility as Utility } from './Utility'; /// Utility Module /////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import * as path from 'path'; /// Path Module ////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import * as glob from 'glob'; /// GLOB Module ////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class CommonDatabaseClass { /// CommonDatabase Class Definition //////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Constants ////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * This constant is a convenience contant providing access the Sequelize's Op class
	 * @name CommonDatabaseClass.Operator
	 * @public
	 * @static
	 * @type {Sequelize.Op}
	 */
	public static Operator = Sequelize.Op;

	/**
	 * This constant is a convenience contant providing access the Sequelize's QueryTypes class
	 * @name CommonDatabaseClass.Query
	 * @public
	 * @static
	 * @type {Sequelize.QueryTypes}
	 */
	public static Query = Sequelize.QueryTypes;

	/**
	 * This constant is a convenience contant providing access the Sequelize's DataTypes class
	 * @name CommonDatabaseClass.Type
	 * @public
	 * @static
	 * @type {Sequelize.DataTypes}
	 */
	public static Type = Sequelize.QueryTypes;

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Properties ///////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * This property contains the database connection
	 * @name CommonDatabaseClass.mConnection
	 * @protected
	 * @type {Sequelize.Sequelize}
	 */
	protected mConnection: Sequelize.Sequelize;

	/**
	 * This method contains the Sequelize ORM class
	 * @name CommonDatabaseClass.mLibrary
	 * @protected
	 * @type {Sequelize}
	 */
	protected mLibrary = Sequelize;

	/**
	 * This property contains our ORM models
	 * @name CommonDatabaseClass.mModels
	 * @protected
	 * @type {{[name: string]: Sequelize.Model<any, any>}}
	 */
	protected mModels: {[name: string]: Sequelize.Model<any, any>} = {};

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Constructor //////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * This method instantiates a new CommonDatabase class object
	 * @name CommonDatabaseClass.constructor()
	 * @returns {CommonDatabaseClass}
	 */
	constructor() {

		///////////////////////////////////////////////////////////////////////////////////////////////////////////////
		/// Connection Initialization ////////////////////////////////////////////////////////////////////////////////
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////

		// Connect to the database
		this.mConnection = new Sequelize(Config.db.name, Config.db.username, Config.db.password, Config.db.options);

		///////////////////////////////////////////////////////////////////////////////////////////////////////////////
		/// Model Import /////////////////////////////////////////////////////////////////////////////////////////////
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////

		// Load the Model files
		glob.sync(path.join(__dirname, '..', 'Model', 'Fluent', '**', '*.js')).forEach(($file: string, $index: number) => {
			// Resolve the path name and import the model
			this.mConnection.import(path.resolve($file));
		});
		// Iterate over the models
		Object.keys(this.mModels).forEach(($name: string, $index: number) => {
			// Check for an associate method
			if (this.mModels[$name].associate) {
				// Execute the associate method
				this.mModels[$name].associate(this.mModels);
			}
		});

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	} /// End Constructor ////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} /// End CommonDatabase Class Definition ////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const CommonDatabase = new CommonDatabaseClass(); /// CommonDatabase Module Instantiation ////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
export { CommonDatabase }; /// CommonDatabase Module Export //////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
